;;;【このコードを使用する際の前提】
;;;機器へログイン済みであることとします

;ホスト名を取得するために、Enterを1回実行。例としてホスト名をRT1とすると
;以下のsendln ''によってRT1#という応答がteratermの画面上に表示される

 sendln ''

;recvlnで一行分の文字(今回はRT1#)を受信し、変数 inputstrにRT1#の文字列を格納する。

 recvln
 wait '#'

;inputstrに格納された『RT1#』という文字列の中に#が含まれているかを調べる
;#が含まれていれば、#が左から何文字目にあるかを変数 result に格納する。
;今回のRT1#であれば result には 4 が格納される

 strscan inputstr '#' 
 
;inputstr(RT#1)の1文字目からresult(↑で格納された4) - 1 
;つまり3文字目までを読み込み、HOSTNAMEという変数に格納する

strcopy inputstr 1 result - 1 HOSTNAME


;ログファイルを保存するフォルダを生成し、そのフォルダのパスを変数PATHに格納する

exec 'cmd /c md C:\temp'
PATH = 'C:\temp\'

;起動するログファイルのファイル名を組み立てていく

LOGFILE=''

;ログファイル名に日付が必要であればログ取得日の日付を変数DATEに格納する
;%Y%m%d_%H%M%Sは20191110_100030といった年月日_何時何分何秒までを取得
;%Y%m%dは20191110といった年月日までを取得

getdate DATE '%Y%m%d_%H%M%S'
strconcat LOGFILE PATH
strconcat LOGFILE HOSTNAME
strconcat LOGFILE '_'
strconcat LOGFILE DATE
strconcat LOGFILE '.log'

;ここまででC:\temp\配下に保存されるファイル名 RT1_20191110_080029.log
;といったログファイル名が組み立てられる

;最後に↑で組み立てたログファイルを起動する。
;ログファイルの後ろの5ケタの数字でログ起動時に
;追記モードやタイムスタンプを入れるといったオプションを追加可能
;1桁目：バイナリフラグ。0で良い
;2桁目：追記フラグ。0の場合、同じファイル名のファイルがあると上書きされる。
;                   1の場合、同じファイル名のファイルがあれば追記される
;3桁目：プレーンテキストフラグ。0で良い。
;        0以外の場合、例えば半角スペースのASCII非表示文字(^A)がログに混ざってしまう。
;4桁目：タイムスタンプフラグ。ログの行頭に時刻を追加する。
;       ログに保存されている各行はいつ出力されたかを事細かに知る必要があったり
;       ログ保存をタイムスタンプをつけるよう指示されている場合は1。そうでなけば0で良い。
;5桁目：ハイドダイアログフラグ。0で良い。

logopen LOGFILE 0 1 0 0 0


;これでログ起動が完了。ログインと組み合わせたり、showコマンド取得と組み合わせたりする
;showコマンドと組み合わせる場合、showコマンドの取得後に以下のコマンドを入れると
;ログファイルを閉じてくれます

logclose

